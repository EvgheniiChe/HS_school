<?php

use Illuminate\Support\Facades\Date;

use function Pest\Laravel\actingAs;
use function Pest\Laravel\travelTo;

it('returns a list of students homeworks', function () {
    travelTo(Date::parse('2023-11-21'));

    $staff = user()->staffRole()->create(['id' => 1]);
    $anotherStaff = user()->staffRole()->create(['id' => 2]);

    $course = course()
        ->staff($staff)
        ->type(courseType()->create())
        ->startDate('2023-10-21')
        ->endDate(now()->addMonth()->format('Y-m-d'))
        ->create();

    $course2 = course()
        ->staff($staff)
        ->type(courseType()->create())
        ->startDate('2024-01-28')
        ->endDate(Date::parse('2024-01-28')->addMonths(2)->format('Y-m-d'))
        ->create();

    $course3 = course()
        ->staff($anotherStaff)
        ->type(courseType()->create())
        ->startDate('2024-02-28')
        ->endDate(Date::parse('2024-02-28')->addMonths(2)->format('Y-m-d'))
        ->create();

    group()->course($course)->student(user()->studentRole()->create(['id' => 3]))->create();
    group()->course($course)->student(user()->studentRole()->create(['id' => 4]))->create();
    group()->course($course2)->student(user()->studentRole()->create(['id' => 5]))->create();
    group()->course($course3)->student(user()->studentRole()->create(['id' => 6]))->create();

    homework()
        ->lesson($lesson1 = lesson()->theme('Порождающие шаблоны проектирования')->course($course)->create(['id' => 1]))
        ->theme($lesson1->theme)
        ->expiredAt(now()->addWeek())
        ->info(<<<'EOL'
            Задачи по паттерну 'Шаблонный метод':
            1. Напишите программу для загрузки данных из различных источников (файл, база данных, веб-сервис). Используйте шаблонный метод для определения общего алгоритма загрузки с возможностью переопределения шагов для каждого типа источника.
            2. Разработайте систему для создания отчетов. Примените шаблонный метод для определения общего процесса создания отчета с возможностью переопределения шагов для разных типов отчетов.
            3. Создайте приложение для генерации графиков. Используйте шаблонный метод для определения общего процесса создания графика с возможностью переопределения шагов для различных типов графиков.
            EOL
        )
        ->create(['id' => 1]);

    homework()
        ->lesson($lesson2 = lesson()->theme('Порождающие шаблоны проектирования')->course($course)->create(['id' => 2]))
        ->theme($lesson2->theme)
        ->expiredAt(now()->addWeeks())
        ->info(<<<'EOL'
            Задачи по паттерну 'Наблюдатель':
            1. Разработайте систему учета акций в интернет-магазине. Реализуйте механизм наблюдения, чтобы уведомлять клиентов об изменениях в ценах на продукты.
            2. Создайте приложение для мессенджера с функциональностью отправки сообщений. Примените паттерн наблюдатель, чтобы обеспечить оповещение пользователей о новых входящих сообщениях.
            3. Реализуйте систему управления задачами. При изменении статуса задачи все заинтересованные стороны (назначенные исполнители, менеджеры) должны получать уведомления.
            EOL
        )
        ->create(['id' => 2]);

    homework()
        ->lesson($lesson3 = lesson()->theme('Порождающие шаблоны проектирования')->course($course2)->create(['id' => 3]))
        ->theme($lesson3->theme)
        ->expiredAt(now()->addWeeks())
        ->info(<<<'EOL'
            Задачи по паттерну 'Наблюдатель':
            1. Разработайте систему учета акций в интернет-магазине. Реализуйте механизм наблюдения, чтобы уведомлять клиентов об изменениях в ценах на продукты.
            2. Создайте приложение для мессенджера с функциональностью отправки сообщений. Примените паттерн наблюдатель, чтобы обеспечить оповещение пользователей о новых входящих сообщениях.
            3. Реализуйте систему управления задачами. При изменении статуса задачи все заинтересованные стороны (назначенные исполнители, менеджеры) должны получать уведомления.
            EOL
        )
        ->create(['id' => 3]);

    homework()
        ->lesson($lesson4 = lesson()->theme('Порождающие шаблоны проектирования')->course($course3)->create(['id' => 4]))
        ->theme($lesson4->theme)
        ->expiredAt(now()->addWeeks())
        ->info(<<<'EOL'
            Задачи по паттерну 'Наблюдатель':
            1. Разработайте систему учета акций в интернет-магазине. Реализуйте механизм наблюдения, чтобы уведомлять клиентов об изменениях в ценах на продукты.
            2. Создайте приложение для мессенджера с функциональностью отправки сообщений. Примените паттерн наблюдатель, чтобы обеспечить оповещение пользователей о новых входящих сообщениях.
            3. Реализуйте систему управления задачами. При изменении статуса задачи все заинтересованные стороны (назначенные исполнители, менеджеры) должны получать уведомления.
            EOL
        )
        ->create(['id' => 4]);

    actingAs($staff)
        ->getJson(route('staff.homeworks.index', $course))
        ->dd();

})->skip();
